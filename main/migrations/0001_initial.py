# Generated by Django 4.2.4 on 2023-09-24 22:15

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ClosedSchoolBoxh",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "closed_school_year",
                    models.IntegerField(
                        blank=True, db_column="Closed_school_year", null=True
                    ),
                ),
                (
                    "closed_school_number",
                    models.IntegerField(
                        blank=True, db_column="Closed_school_number", null=True
                    ),
                ),
            ],
            options={
                "db_table": "closed_school_boxh",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ClosedSchoolMap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "school_name",
                    models.CharField(
                        blank=True, db_column="School_name", max_length=50, null=True
                    ),
                ),
                (
                    "closed_school_year",
                    models.IntegerField(
                        blank=True, db_column="Closed_school_year", null=True
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, db_column="Address", max_length=50, null=True
                    ),
                ),
                (
                    "latitude",
                    models.FloatField(blank=True, db_column="Latitude", null=True),
                ),
                (
                    "longitude",
                    models.FloatField(blank=True, db_column="Longitude", null=True),
                ),
            ],
            options={
                "db_table": "closed_school_map",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FertilityRateStudents",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "elementary_school_number_of_students",
                    models.IntegerField(
                        blank=True,
                        db_column="Elementary_school_number_of_students",
                        null=True,
                    ),
                ),
                (
                    "seoul",
                    models.IntegerField(blank=True, db_column="Seoul", null=True),
                ),
                (
                    "busan",
                    models.IntegerField(blank=True, db_column="Busan", null=True),
                ),
                (
                    "daegu",
                    models.IntegerField(blank=True, db_column="Daegu", null=True),
                ),
                (
                    "incheon",
                    models.IntegerField(blank=True, db_column="Incheon", null=True),
                ),
                (
                    "gwangju",
                    models.IntegerField(blank=True, db_column="Gwangju", null=True),
                ),
                (
                    "daejeon",
                    models.IntegerField(blank=True, db_column="Daejeon", null=True),
                ),
                (
                    "ulsan",
                    models.IntegerField(blank=True, db_column="Ulsan", null=True),
                ),
                (
                    "sejong",
                    models.IntegerField(blank=True, db_column="Sejong", null=True),
                ),
                (
                    "gyeonggi",
                    models.IntegerField(blank=True, db_column="Gyeonggi", null=True),
                ),
                (
                    "gangwon",
                    models.IntegerField(blank=True, db_column="Gangwon", null=True),
                ),
                (
                    "chungbuk",
                    models.IntegerField(blank=True, db_column="Chungbuk", null=True),
                ),
                (
                    "chungnam",
                    models.IntegerField(blank=True, db_column="Chungnam", null=True),
                ),
                (
                    "jeonbuk",
                    models.IntegerField(blank=True, db_column="Jeonbuk", null=True),
                ),
                (
                    "jeonnam",
                    models.IntegerField(blank=True, db_column="Jeonnam", null=True),
                ),
                (
                    "gyeongbuk",
                    models.IntegerField(blank=True, db_column="Gyeongbuk", null=True),
                ),
                (
                    "gyeongnam",
                    models.IntegerField(blank=True, db_column="Gyeongnam", null=True),
                ),
                ("jeju", models.IntegerField(blank=True, db_column="Jeju", null=True)),
                (
                    "sigungu",
                    models.CharField(
                        blank=True, db_column="Sigungu", max_length=50, null=True
                    ),
                ),
                (
                    "total_babies_born",
                    models.CharField(
                        blank=True,
                        db_column="Total_babies_born",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "total_fertility_rate",
                    models.CharField(
                        blank=True,
                        db_column="Total_fertility_rate",
                        max_length=50,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "fertility_rate_students",
                "managed": False,
            },
        ),
    ]
